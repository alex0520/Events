buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
	}
}

plugins {
	id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.moowork.node"

node {
	version = '8.11.3'
	npmVersion = '6.5.0'
	download = true
}

group = 'com.alozano.partnerships'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

bootJar {
	baseName = 'Events'
	mainClassName = 'com.alozano.partnerships.interview.InterviewApplication'
	// Exclude manifest signature files
	exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/LICENSE'
}

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.mapstruct:mapstruct-jdk8:1.2.0.Final')
	compile('org.liquibase:liquibase-core')
	compile('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compileOnly('org.projectlombok:lombok:1.18.4')
	compileOnly('org.mapstruct:mapstruct-processor:1.2.0.Final')
	apt('org.projectlombok:lombok:1.18.4')
	apt('org.mapstruct:mapstruct-processor:1.2.0.Final')
}

nodeSetup.onlyIf {
	!nodeSetup.nodeDir.exists()
}

npmSetup.onlyIf {
	!npmSetup.npmDir.exists()
}

task appNpmInstall(type: NpmTask) {
	description = "Installs dependencies from package.json"
	workingDir = file("${project.projectDir}/src/main/webapp")
	args = ['install']
}

task appNpmBuild(type: NpmTask, dependsOn: 'appNpmInstall') {
	description = "Builds the application"
	workingDir = file("${project.projectDir}/src/main/webapp")
	args = ['run', 'build']
}

processResources {
	from (file("${project.projectDir}/src/main/webapp/build/")) {
		into 'public'
	}
}

processResources.dependsOn 'appNpmBuild'

clean.delete << file('node_modules')
clean.delete << file('src/main/webapp/build')
clean.delete << file('src/main/resources/static')